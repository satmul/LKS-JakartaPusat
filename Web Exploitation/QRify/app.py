from flask import *
import qrcode
from PIL import Image
from pyzbar.pyzbar import decode
import base64
from io import BytesIO
import os

app = Flask(__name__)
SECRET_KEY = os.urandom(64)

@app.route('/')
def index():
    payload = render_template_string("")
    return render_template('index.html', name=payload)

@app.route('/generator',methods = ['POST', 'GET'])
def generateQR():
    if request.method == 'GET':
        return render_template('generator.html')
    
    elif request.method == "POST":
        qr_color = request.form.get('qr_color_value')
        bg_color = request.form.get('bg_color_value')
        qr_value = request.form.get('user_value')

        #user_input validation
        if (not qr_value):
            return render_template('generator.html', status = "Please insert your data.")
        else:

            if (qr_value.isalnum() == False):
                return render_template('generator.html', status = "Well, we got a potential hacker right here!")
        
            else:
        #create QR Code
                qr = qrcode.QRCode(
                    version=1,
                    error_correction=qrcode.constants.ERROR_CORRECT_L,
                    box_size=10,
                    border=4)
                
                qr.add_data(qr_value)
                qr.make(fit=True)
                
                img = qr.make_image(fill_color=bg_color, back_color=qr_color)
                image_bytes = BytesIO()
                img.save(image_bytes, format="PNG")

                # Convert bytes to base64
                base64_image = base64.b64encode(image_bytes.getvalue()).decode("utf-8")
            
                return render_template('generator.html', generated = base64_image)

        


@app.route('/read',methods = ['POST', 'GET'])
def readQR():
    if request.method == "GET":
        return render_template('read.html')
    
    elif request.method == 'POST':
        data = request.files['data']
        if 'data' in request.files and request.files['data']:
            print(data)
            qr = decode(Image.open(data))
            decoded_data = qr[0]
            data_value = decoded_data.data.decode('utf-8')
            ##filterisasi 
            blacklisted = ['os','nc','php','python','wget','curl','read','Popen','popen','write']
            for item in blacklisted:
                if item in data_value: 
                    return render_template('read.html', status = "HAXXOR DETECTED!!!!")
            else:
                status = render_template_string(data_value)
                return render_template('read.html', status = status)
        else:
            return render_template('read.html', status = "Please insert your QR Code")    
    
    
   
app.run(host='0.0.0.0', port=8080)